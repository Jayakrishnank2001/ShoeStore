<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Shoes Store Website</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800" rel="stylesheet">
    <link rel="stylesheet" href="/css/open-iconic-bootstrap.min.css">
    <link rel="stylesheet" href="/css/animate.css">
    <link rel="stylesheet" href="/css/owl.carousel.min.css">
    <link rel="stylesheet" href="/css/owl.theme.default.min.css">
	
    <link rel="stylesheet" href="/css/magnific-popup.css">
    <link rel="stylesheet" href="/css/aos.css">

    <link rel="stylesheet" href="/css/ionicons.min.css">
    <link rel="stylesheet" href="/css/bootstrap-datepicker.css">
    <link rel="stylesheet" href="/css/jquery.timepicker.css">

	<link rel="stylesheet" href="/css1/userlogin.css">
    <link rel="stylesheet" href="/css/flaticon.css">
    <link rel="stylesheet" href="/css/icomoon.css">
    <link rel="stylesheet" href="/css/style.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
  </head>
  <body class="goto-here">
		
    <%- include('../partials/header.ejs') %>

    
      <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
          <div class="col-md-9 ftco-animate text-center">
          	<p class="breadcrumbs"><span class="mr-2"><a href=""></a></span> <span></span></p>
            <h1 class="mb-0 bread" style="font-weight:600;">MY CART</h1>
          </div>
        </div>
      </div>
    

    <section class="ftco-section ftco-cart">
			<div class="container">
				<div class="row">
    			<div class="col-md-12 ftco-animate">
    				<div class="cart-list">
	    				<table class="table">
						    <thead class="thead-primary">
						      <tr class="text-center">
						        <th>&nbsp;</th>
						        <th>&nbsp;</th>
						        <th>Product</th>
						        <th>Price</th>
						        <th>Quantity</th>
						        <th>Total</th>
						      </tr>
						    </thead>
						    <tbody>
                  <% if(cartItems.length===0) {%>
                    <h3 class="text-center font-weight-bold">Your cart is Empty</h3>
                    <% } %>
							  <% cartItems.forEach(item=>{ %>
						      <tr class="text-center">
						        <td class="product-remove"><a href="#" onclick="cartRemove('<%= item.product._id %>')"><span class="ion-ios-close"></span></a></td>

						        <td class="image-prod"><img src='/uploads/<%= item.product.image %>' style="width:80px; height:80px;"></td>
						        
						        <td class="product-name">
						        	<h3><%= item.product.productName %></h3>
						        </td>
						        
						        <td class="price">₹<%= item.product.price %></td>
						        
						        <td class="quantity" id="product<%= item.product._id %>">
									<form class="input-group">
									  <div class="input-group-prepend">
										<button class="btn btn-outline-secondary btn-lg minus-button" data-productid="<%= item.product._id %>" data-quantity="<%= item.quantity-1 %>"><i class="fas fa-minus"></i></button>
									  </div>
									  <input class="form-control" name="quantity" type="number" id="quantityInput<%= item.product._id %>" min="1" value="<%= item.quantity %>" readonly/>
									  <div class="input-group-append">
										<button class="btn btn-outline-secondary btn-lg plus-button" data-productid="<%= item.product._id %>" data-quantity="<%= item.quantity+1 %>"><i class="fas fa-plus"></i></button>
									  </div>
									</form>
								  </td>
						      
								  <td class="total">
                    
                      <span id="totalPrice<%= item.product._id %>">₹<%= item.totalPrice %></span>

                  </td>
							</tr>

							<% }); %>
              
						    </tbody>
						  </table>
					  </div>
    			</div>
    		</div>
    		<div class="row justify-content-start">
    			<div class="col col-lg-5 col-md-6 mt-5 cart-wrap ftco-animate">
    				<div class="cart-total mb-3">
    					<h3>Cart Totals</h3>
    					<p class="d-flex">
    						<span>Subtotal</span>
    						<span id="newTotalSumejs">₹<%= totalSum %></span>
    					</p>
    					<p class="d-flex">
    						<span>Delivery</span>
    						<span>₹0.00</span>
    					</p>
    					<p class="d-flex">
    						<span>Discount</span>
    						<span>₹0.00</span>
    					</p>
    					<hr>
    					<p class="d-flex total-price">
    						<span>Total</span>
    						<span id="newTotalSumClient">₹<%= totalSum %></span>
    					</p>
    				</div>
            <% if(cartItems.length===0) { %>
    				<p class="text-center"><a href="/cart" class="btn btn-primary py-3 px-4" onclick="checkCartNotEmpty()">Proceed to Checkout</a></p>
            <% }else{ %>
              <p class="text-center"><a href="/checkout" class="btn btn-primary py-3 px-4">Proceed to Checkout</a></p>
            <% } %>
    			</div>
    		</div>
			</div>
		</section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
         
		//product remove from the cart
		async function cartRemove(productId){
			await fetch(`/removecart/${productId}`).then(res=>res.json()).then(data=>{
				if(data.data=='Product removed from the cart successfully'){
					Swal.fire({
					icon:'success',
					title:'Product removed from the cart successfully',
          timer:2000,
          showConfirmButton:false
					})
          setTimeout(()=>{
            location.reload()
          },2000)
				}
			})
		}


    //funtion to update the total sum in the UI
		const updateTotalSum=(newTotalSum)=>{
			const totalSumElement=document.getElementById('newTotalSumejs')
            if (totalSumElement) {
                totalSumElement.textContent = `₹${newTotalSum}`
            }
        }

		// Handling Plus or Minus button
        const plusButtons = document.querySelectorAll('.plus-button')
        const minusButtons = document.querySelectorAll('.minus-button')
        
        // Function to update the quantity and total price in the UI
        const updateUI = (productId, newQuantity, newTotalPrice, newTotalSum) => {
            const quantityInput = document.querySelector(`#quantityInput${productId}`);
            const totalPriceElement = document.querySelector(`#totalPrice${productId}`);
            const totalSumElement = document.getElementById('newTotalSumejs');
            const newTotalSumElement = document.getElementById('newTotalSumClient');
            if (newTotalSumElement) {
              newTotalSumElement.textContent = `₹${newTotalSum}`;
            }
            quantityInput.value = newQuantity;
            totalPriceElement.innerHTML = `₹${newTotalPrice}`;
            if (newTotalSum !== undefined) {
                totalSumElement.textContent = `₹${newTotalSum}`; // Update total sum
            }
        }

		   // Click event listeners to the plus buttons
        plusButtons.forEach((plusButton) => {
            plusButton.addEventListener('click', async (e) => {
              e.preventDefault()
                const productId = plusButton.getAttribute('data-productid')
                const quantityInput = document.querySelector(`#quantityInput${productId}`)
                let newQuantity = parseInt(quantityInput.value) || 0
                
                // Fetch the product details, including its available quantity
                const productDetails = await fetch(`/getproduct/${productId}`, {
                   method: 'GET',
                   headers: {
                     'Accept': 'application/json',
                  },
                }).then(res => res.json());

               if (productDetails && productDetails.availableQuantity !== undefined) {
                 const availableQuantity = productDetails.availableQuantity;
                
                if (newQuantity < 5 && newQuantity < availableQuantity) {
                    newQuantity += 1
                    // fetch for update the quantity on the server
                    const response = await fetch(`/updateQuantity/${productId}/${newQuantity}`, {
                        method: 'PUT',
                        headers: {
                            'Accept': 'application/json', // Specify JSON response
                        },
                    }).then(res => res.json())
                        .then((response) => {
                            if (response) {                        
                                // parse the response JSON to get the updated total price
                                // const { updatedTotalPrice, updatedTotalSum  } = await response.json()
                                // Update the UI with the new quantity and total price
                                updateUI(productId, newQuantity, response.updatedTotalPrice, response.totalSum)
                                Swal.fire({
                                    position: 'bottom',
                                    title: '<i class="fas fa-plus-circle"></i> Quantity Increased',
                                    customClass: {
                                        title: 'text-success',
                                    },
                                    showConfirmButton: false,
                                    timer: 1000
                                })
                            }
                        })
                }
            }})
        })

        // Click event listeners to the minus button
        minusButtons.forEach((minusButton) => {
            minusButton.addEventListener('click', async (e) => {
              e.preventDefault()
                const productId = minusButton.getAttribute('data-productid')
                const quantityInput = document.querySelector(`#quantityInput${productId}`)
                let currentQuantity = parseInt(quantityInput.value) || 0
                if (currentQuantity > 1) {
                    currentQuantity -= 1 // Decrementing quantity
                    // using fetch for updating the quantity on the server
                    const response = await fetch(`/updateQuantity/${productId}/${currentQuantity}`, {
                        method: 'PUT',
                        'Accept': 'application/json',
                    }).then(res => res.json())
                        .then((response) => {
                            if (response) {
                                // Parse the response JSON to get the updated total price
                                // const { updatedTotalPrice } = await response.json()
                                // Update the UI with the new quantity and total price
                                updateUI(productId, currentQuantity, response.updatedTotalPrice, response.totalSum)
                                Swal.fire({
                                    position: 'bottom',
                                    title: '<i class="fas fa-minus-circle"></i> Quantity Decreased',
                                    customClass: {
                                        title: 'text-danger', // Apply the 'text-success' class to the title
                                    },
                                    showConfirmButton: false,
                                    timer: 1000
                                })
                            }
                        })
                }
            })
        })


	</script>
    

	<%- include('../partials/homefooter.ejs') %>